name: Java CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up the Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name 'YOUR NAME HERE'
          git config --global user.email 'YOUR-GITHUB-USERID@users.noreply.github.com'
          git add -A
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
        


  # start-runner:
  #   name: Inicia a instancia EC2 na AWS
  #   runs-on: ubuntu-latest
  #   outputs:
  #     label: ${{ steps.start-ec2-runner.outputs.label }}
  #     ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}
  #     - name: Cria a EC2 e associa ao GitHub como self-hosted runner
  #       id: start-ec2-runner
  #       uses: sandrosantoszup/github-selhostedrunner-ec2-action@v0.0.1
  #       with:
  #         mode: start
  #         github-token: ${{ secrets.GH_TOKEN }}
  #         ec2-image-id: ${{ secrets.AWS_AMI_MAVEN }}
  #         ec2-instance-type: t2.micro
  #         subnet-id: subnet-cc8107a7
  #         security-group-id: sg-059973673278f45f7
  #         #iam-role-name: my-role-name # optional, requires additional permissions
  #         aws-resource-tags: > # optional, requires additional permissions
  #           [
  #             {"Key": "Name", "Value": "github-runner"},
  #             {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
  #           ]

  # do-the-job:
  #   name: Executa o job
  #   needs: start-runner
  #   runs-on: ${{ needs.start-runner.outputs.label }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v2
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #   - name: Empacotamento
  #     run: mvn -B package --file pom.xml
  
  # stop-runner:
  #   name: Termina a self-hosted Runner
  #   needs:
  #     - start-runner
  #     - do-the-job
  #   runs-on: ubuntu-latest
  #   if: ${{ always() }}
  #   steps:
  #     - name: Configura o acesso para a conta na AWS
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}
  #     - name: Termina a EC2 utilizada como self-hosted runner
  #       uses: sandrosantoszup/github-selhostedrunner-ec2-action@v0.0.1
  #       with:
  #         mode: stop
  #         github-token: ${{ secrets.GH_TOKEN }}
  #         label: ${{ needs.start-runner.outputs.label }}
  #         ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
